"use strict";(self.webpackChunkme=self.webpackChunkme||[]).push([[9236],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),f=p(t),d=i,g=f["".concat(s,".").concat(d)]||f[d]||c[d]||o;return t?r.createElement(g,l(l({ref:n},u),{},{components:t})):r.createElement(g,l({ref:n},u))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,l=new Array(o);l[0]=f;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var p=2;p<o;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},4757:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return c}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),l=["components"],a={},s="Snippets",p={unversionedId:"languages/python/Snippets-nzXMLR49S",id:"languages/python/Snippets-nzXMLR49S",title:"Snippets",description:"Print BST Tree",source:"@site/docs/languages/python/20220626-Snippets-nzXMLR49S.md",sourceDirName:"languages/python",slug:"/languages/python/Snippets-nzXMLR49S",permalink:"/docs/languages/python/Snippets-nzXMLR49S",draft:!1,editUrl:"https://github.com/iamrahultanwar/me/tree/master/docs/languages/python/20220626-Snippets-nzXMLR49S.md",tags:[],version:"current",sidebarPosition:20220626,frontMatter:{},sidebar:"mainSidebar",previous:{title:"Cheatsheet",permalink:"/docs/languages/python/Cheatsheet-eoHvkmdIK"},next:{title:"Introduction",permalink:"/docs/projects/hydyco/intro"}},u={},c=[{value:"Print BST Tree",id:"print-bst-tree",level:2}],f={toc:c};function d(e){var n=e.components,t=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"snippets"},"Snippets"),(0,o.kt)("h2",{id:"print-bst-tree"},"Print BST Tree"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def print_tree(root, value=\"value\", left=\"left\", right=\"right\"):\n    def display(root, value=value, left=left, right=right):\n        \"\"\"Returns list of strings, width, height, and horizontal coordinate of the root.\"\"\"\n        # No child.\n        if getattr(root, right) is None and getattr(root, left) is None:\n            line = '%s' % getattr(root, value)\n            width = len(line)\n            height = 1\n            middle = width // 2\n            return [line], width, height, middle\n\n        # Only left child.\n        if getattr(root, right) is None:\n            lines, n, p, x = display(getattr(root, left))\n            s = '%s' % getattr(root, value)\n            u = len(s)\n            first_line = (x + 1) * ' ' + (n - x - 1) * '_' + s\n            second_line = x * ' ' + '/' + (n - x - 1 + u) * ' '\n            shifted_lines = [line + u * ' ' for line in lines]\n            return [first_line, second_line] + shifted_lines, n + u, p + 2, n + u // 2\n\n        # Only right child.\n        if getattr(root, left) is None:\n            lines, n, p, x = display(getattr(root, right))\n            s = '%s' % getattr(root, value)\n            u = len(s)\n            first_line = s + x * '_' + (n - x) * ' '\n            second_line = (u + x) * ' ' + '\\\\' + (n - x - 1) * ' '\n            shifted_lines = [u * ' ' + line for line in lines]\n            return [first_line, second_line] + shifted_lines, n + u, p + 2, u // 2\n\n        # Two children.\n        left, n, p, x = display(getattr(root, left))\n        right, m, q, y = display(getattr(root, right))\n        s = '%s' % getattr(root, value)\n        u = len(s)\n        first_line = (x + 1) * ' ' + (n - x - 1) * '_' + s + y * '_' + (m - y) * ' '\n        second_line = x * ' ' + '/' + (n - x - 1 + u + y) * ' ' + '\\\\' + (m - y - 1) * ' '\n        if p < q:\n            left += [n * ' '] * (q - p)\n        elif q < p:\n            right += [m * ' '] * (p - q)\n        zipped_lines = zip(left, right)\n        lines = [first_line, second_line] + [a + u * ' ' + b for a, b in zipped_lines]\n        return lines, n + m + u, max(p, q) + 2, n + u // 2\n\n    lines, *_ = display(root, value, left, right)\n    for line in lines:\n        print(line)\n\n")))}d.isMDXComponent=!0}}]);