"use strict";(self.webpackChunkme=self.webpackChunkme||[]).push([[9112],{3905:function(t,e,r){r.d(e,{Zo:function(){return c},kt:function(){return g}});var i=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,i)}return r}function n(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,i,a=function(t,e){if(null==t)return{};var r,i,a={},o=Object.keys(t);for(i=0;i<o.length;i++)r=o[i],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(i=0;i<o.length;i++)r=o[i],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var m=i.createContext({}),h=function(t){var e=i.useContext(m),r=e;return t&&(r="function"==typeof t?t(e):n(n({},e),t)),r},c=function(t){var e=h(t.components);return i.createElement(m.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return i.createElement(i.Fragment,{},e)}},s=i.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,m=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),s=h(r),g=a,u=s["".concat(m,".").concat(g)]||s[g]||p[g]||o;return r?i.createElement(u,n(n({ref:e},c),{},{components:r})):i.createElement(u,n({ref:e},c))}));function g(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,n=new Array(o);n[0]=s;var l={};for(var m in e)hasOwnProperty.call(e,m)&&(l[m]=e[m]);l.originalType=t,l.mdxType="string"==typeof t?t:a,n[1]=l;for(var h=2;h<o;h++)n[h]=r[h];return i.createElement.apply(null,n)}return i.createElement.apply(null,r)}s.displayName="MDXCreateElement"},9525:function(t,e,r){r.r(e),r.d(e,{assets:function(){return c},contentTitle:function(){return m},default:function(){return g},frontMatter:function(){return l},metadata:function(){return h},toc:function(){return p}});var i=r(7462),a=r(3366),o=(r(7294),r(3905)),n=["components"],l={title:"Algorithm"},m=void 0,h={unversionedId:"algorithm/index",id:"algorithm/index",title:"Algorithm",description:"Important Algorithms",source:"@site/docs/algorithm/index.md",sourceDirName:"algorithm",slug:"/algorithm/",permalink:"/docs/algorithm/",draft:!1,editUrl:"https://github.com/iamrahultanwar/me/tree/master/docs/algorithm/index.md",tags:[],version:"current",frontMatter:{title:"Algorithm"},sidebar:"tutorialSidebar",next:{title:"Binary Search Tree",permalink:"/docs/algorithm/Binary Search Tree-PAnNjwSst"}},c={},p=[{value:"Important Algorithms",id:"important-algorithms",level:2}],s={toc:p};function g(t){var e=t.components,r=(0,a.Z)(t,n);return(0,o.kt)("wrapper",(0,i.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"important-algorithms"},"Important Algorithms"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/binary-search/"},"Binary Search Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/breadth-first-search/"},"Breadth First Search (BFS) Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/depth-first-search/"},"Depth First Search (DFS) Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/merge-sort/"},"Merge Sort Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/quicksort/"},"Quicksort Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/kruskals-algorithm-for-finding-minimum-spanning-tree/"},"Kruskal\u2019s Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/pairs-shortest-paths-floyd-warshall-algorithm/"},"Floyd Warshall Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/single-source-shortest-paths-dijkstras-algorithm/"},"Dijkstra\u2019s Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/single-source-shortest-paths-bellman-ford-algorithm/"},"Bellman Ford Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/maximum-subarray-problem-kadanes-algorithm/"},"Kadane\u2019s Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/lee-algorithm-shortest-path-in-a-maze/"},"Lee Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/flood-fill-algorithm/"},"Flood Fill Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/detect-cycle-linked-list-floyds-cycle-detection-algorithm/"},"Floyd\u2019s Cycle Detection Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/disjoint-set-structure-union-find-algorithm/"},"Union Find Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/kahn-topological-sort-algorithm/"},"Topological Sort Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/implementation-kmp-algorithm-c-cpp-java/"},"KMP Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/insertion-sort-iterative-recursive/"},"Insertion Sort Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/selection-sort-iterative-recursive/"},"Selection Sort Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/counting-sort-algorithm-implementation/"},"Counting Sort Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/heap-sort-place-place-implementation-c-c/"},"Heap Sort Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/kahn-topological-sort-algorithm/"},"Kahn\u2019s Topological Sort Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/huffman-coding/"},"Huffman Coding Compression Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/quickselect-algorithm/"},"Quickselect Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/find-majority-element-in-an-array-boyer-moore-majority-vote-algorithm/"},"Boyer\u2013Moore Majority Vote Algorithm")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"https://www.techiedelight.com/euclids-algorithm-to-find-gcd-of-two-numbers/"},"Euclid\u2019s Algorithm"))))}g.isMDXComponent=!0}}]);