"use strict";(self.webpackChunkme=self.webpackChunkme||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"About me","href":"/docs/intro","docId":"intro"},{"type":"category","label":"Algorithm","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Binary Search Tree","href":"/docs/algorithm/Binary Search Tree-PAnNjwSst","docId":"algorithm/Binary Search Tree-PAnNjwSst"},{"type":"link","label":"Binary Search","href":"/docs/algorithm/Binary Search-exQSM4GIj","docId":"algorithm/Binary Search-exQSM4GIj"},{"type":"link","label":"Breadth-First Search","href":"/docs/algorithm/Breadth First Search-9XOs5wLb3","docId":"algorithm/Breadth First Search-9XOs5wLb3"},{"type":"link","label":"Depth First Search","href":"/docs/algorithm/Depth First Search-oDWIW4jHZ","docId":"algorithm/Depth First Search-oDWIW4jHZ"}],"href":"/docs/algorithm/"},{"type":"category","label":"DSA","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Complexity Analysis","href":"/docs/dsa/Complexity Analysis-oOehhpznN","docId":"dsa/Complexity Analysis-oOehhpznN"},{"type":"link","label":"Memory","href":"/docs/dsa/Memory-EnAwxq5GZ","docId":"dsa/Memory-EnAwxq5GZ"},{"type":"link","label":"Big O Notation","href":"/docs/dsa/Big O Notation-00Smhkjuv","docId":"dsa/Big O Notation-00Smhkjuv"},{"type":"link","label":"Logarithm","href":"/docs/dsa/Logarithm-JA49mW3ZZ","docId":"dsa/Logarithm-JA49mW3ZZ"},{"type":"link","label":"Array","href":"/docs/dsa/Array-JYTd_Npeg","docId":"dsa/Array-JYTd_Npeg"},{"type":"link","label":"Linked Lists","href":"/docs/dsa/Linked Lists-IBDjsnBgx","docId":"dsa/Linked Lists-IBDjsnBgx"},{"type":"link","label":"Hash Tables","href":"/docs/dsa/Hash Tables-284GDvHm1","docId":"dsa/Hash Tables-284GDvHm1"},{"type":"link","label":"Stacks And Queues","href":"/docs/dsa/Stacks And Queues-sDPcJ-3iF","docId":"dsa/Stacks And Queues-sDPcJ-3iF"},{"type":"link","label":"Strings","href":"/docs/dsa/Strings-yGSloDW89","docId":"dsa/Strings-yGSloDW89"},{"type":"link","label":"Graphs","href":"/docs/dsa/Graphs-Nv8-CVr9f","docId":"dsa/Graphs-Nv8-CVr9f"},{"type":"link","label":"Trees","href":"/docs/dsa/Trees-3V5farrGy","docId":"dsa/Trees-3V5farrGy"},{"type":"link","label":"Glossary","href":"/docs/dsa/Glossary-wL0qzzPif","docId":"dsa/Glossary-wL0qzzPif"}],"href":"/docs/dsa/"},{"type":"category","label":"Questions","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Algoexpert","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Caesar Cipher Encryptor","href":"/docs/questions/algoexpert/Caesar Cipher Encryptor-Il_h28GJi","docId":"questions/algoexpert/Caesar Cipher Encryptor-Il_h28GJi"},{"type":"link","label":"Product Sum","href":"/docs/questions/algoexpert/Product Sum-N_RftMYAC","docId":"questions/algoexpert/Product Sum-N_RftMYAC"}],"href":"/docs/questions/algoexpert/"}],"href":"/docs/questions/"}]},"docs":{"algorithm/Binary Search Tree-PAnNjwSst":{"id":"algorithm/Binary Search Tree-PAnNjwSst","title":"Binary Search Tree","description":"The idea is to use binary search which is a Divide and Conquer algorithm. Like all divide-and-conquer algorithms, binary search first divides a large array into two smaller subarrays and then recursively (or iteratively) operate the subarrays. But instead of working on both subarrays, it discards one subarray and continues on the second subarray. This decision of discarding one subarray is made in just one comparison.","sidebar":"tutorialSidebar"},"algorithm/Binary Search-exQSM4GIj":{"id":"algorithm/Binary Search-exQSM4GIj","title":"Binary Search","description":"The idea is to use binary search which is a Divide and Conquer algorithm. Like all divide-and-conquer algorithms, binary search first divides a large array into two smaller subarrays and then recursively (or iteratively) operate the subarrays. But instead of working on both subarrays, it discards one subarray and continues on the second subarray. This decision of discarding one subarray is made in just one comparison.","sidebar":"tutorialSidebar"},"algorithm/Breadth First Search-9XOs5wLb3":{"id":"algorithm/Breadth First Search-9XOs5wLb3","title":"Breadth-First Search","description":"Breadth\u2013first search (BFS) is an algorithm for traversing or searching tree or graph data structures. It starts at the tree root (or some arbitrary node of a graph, sometimes referred to as a \u2018search key\u2019) and explores the neighbor nodes first before moving to the next-level neighbors.","sidebar":"tutorialSidebar"},"algorithm/Depth First Search-oDWIW4jHZ":{"id":"algorithm/Depth First Search-oDWIW4jHZ","title":"Depth First Search","description":"Depth\u2013first search (DFS) is an algorithm for traversing or searching tree or graph data structures. One starts at the root (selecting some arbitrary node as the root for a graph) and explore as far as possible along each branch before backtracking.","sidebar":"tutorialSidebar"},"algorithm/index":{"id":"algorithm/index","title":"Algorithm","description":"Important Algorithms","sidebar":"tutorialSidebar"},"dsa/Array-JYTd_Npeg":{"id":"dsa/Array-JYTd_Npeg","title":"Array","description":"Key Terms","sidebar":"tutorialSidebar"},"dsa/Big O Notation-00Smhkjuv":{"id":"dsa/Big O Notation-00Smhkjuv","title":"Big O Notation","description":"Prerequistes","sidebar":"tutorialSidebar"},"dsa/Complexity Analysis-oOehhpznN":{"id":"dsa/Complexity Analysis-oOehhpznN","title":"Complexity Analysis","description":"Key Terms","sidebar":"tutorialSidebar"},"dsa/Glossary-wL0qzzPif":{"id":"dsa/Glossary-wL0qzzPif","title":"Glossary","description":"*   #### Acyclic Graph","sidebar":"tutorialSidebar"},"dsa/Graphs-Nv8-CVr9f":{"id":"dsa/Graphs-Nv8-CVr9f","title":"Graphs","description":"Key Terms","sidebar":"tutorialSidebar"},"dsa/Hash Tables-284GDvHm1":{"id":"dsa/Hash Tables-284GDvHm1","title":"Hash Tables","description":"Key Terms","sidebar":"tutorialSidebar"},"dsa/index":{"id":"dsa/index","title":"DSA","description":"The elementary particles of algorithms, data structures are woven into the very fabric of computer science and are essential building blocks of many a solution to coding interview problems.","sidebar":"tutorialSidebar"},"dsa/Linked Lists-IBDjsnBgx":{"id":"dsa/Linked Lists-IBDjsnBgx","title":"Linked Lists","description":"Key Terms","sidebar":"tutorialSidebar"},"dsa/Logarithm-JA49mW3ZZ":{"id":"dsa/Logarithm-JA49mW3ZZ","title":"Logarithm","description":"Key Terms","sidebar":"tutorialSidebar"},"dsa/Memory-EnAwxq5GZ":{"id":"dsa/Memory-EnAwxq5GZ","title":"Memory","description":"The bedrock of all data structures, memory is the underlying concept which shows why data staructures work the way they do.","sidebar":"tutorialSidebar"},"dsa/Stacks And Queues-sDPcJ-3iF":{"id":"dsa/Stacks And Queues-sDPcJ-3iF","title":"Stacks And Queues","description":"Key Terms","sidebar":"tutorialSidebar"},"dsa/Strings-yGSloDW89":{"id":"dsa/Strings-yGSloDW89","title":"Strings","description":"Key Terms","sidebar":"tutorialSidebar"},"dsa/Trees-3V5farrGy":{"id":"dsa/Trees-3V5farrGy","title":"Trees","description":"Key Terms","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"About me","description":"","sidebar":"tutorialSidebar"},"questions/algoexpert/Caesar Cipher Encryptor-Il_h28GJi":{"id":"questions/algoexpert/Caesar Cipher Encryptor-Il_h28GJi","title":"Caesar Cipher Encryptor","description":"Caesar Cipher Encryptor","sidebar":"tutorialSidebar"},"questions/algoexpert/index":{"id":"questions/algoexpert/index","title":"Algoexpert","description":"","sidebar":"tutorialSidebar"},"questions/algoexpert/Product Sum-N_RftMYAC":{"id":"questions/algoexpert/Product Sum-N_RftMYAC","title":"Product Sum","description":"Product Sum","sidebar":"tutorialSidebar"},"questions/index":{"id":"questions/index","title":"Questions","description":"","sidebar":"tutorialSidebar"}}}')}}]);